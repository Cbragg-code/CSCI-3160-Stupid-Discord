Set up VS Code
-	Download WSL extension pack
-	Log in to WSL normally through the command line. Go to the directory you want to be in. Enter >$ code .
    - this should open a WSL instance in VS code
    - you can also start wsl from vscode but I think this is easier 
-	Download python extension pack (VS code will probably suggest them). Even if you already have them downloaded on your machine, you have to download them again in WSL
-	Open a terminal in VS code. This works the same as the normal command window.
    - Ctrl+Shift+P then use the View: Toggle Terminal command
- To run python, you don't have to compile or anything. python3 filename.py runs a py script

Gui user guide
KNOWN BUG: it does not exit correctly. Pressing exit or the X in the corner will close the window, 
but the client won't exit the server until you go into the VS Code terminal and press ctrl+C to 
completely end the program. Something is going wrong with the threads, or something. I am working on this.

To run the gui, all you have to do is put the files below into your folder, set up py libraries, 
set up a server on port 9001, and then run  >$ python3 Chat.py or >$ python3 LogIn.py

- LogIn.py: run this first if you want to enter a custom username (already working) and port number (under construction)
  If you don't want to do this every time, I have defaults already set up in Chat.py
  After you do that and press join, it will close the window and launch Chat.py

- Chat.py
  Called by LogIn, or you can run it by itself
  Dependent on clientTest as a library 
  This is the file that creates a gui and then manages library calls to the client C code
  to actually run the chat 

- clientTest.c
  Modified client code, broken up into functions and changed slightly.
  To use it, you have to run cc -fPIC -shared -o my_functions.so clientTest.c
  Chat.py does this automatically every time you run it, but if you change the file and then test
  it in another program, you have to compile it into the .so again.

- ircserver.c
  I have been using ircserver.c to set up my server. server.c should work, but there may be some
  issues with exiting chat displaying correctly. 
